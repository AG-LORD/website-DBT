import React, { useState, useRef, useEffect } from "react";
import { Button } from "./components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "./components/ui/card";
import { Badge } from "./components/ui/badge";
import { ScrollArea } from "./components/ui/scroll-area";
import { Input } from "./components/ui/input";
import { InvokeLLM } from "./integrations/Core";

import {
  MessageCircle,
  X,
  Send,
  Book,
  FileText,
  CreditCard,
  Clock,
  Globe,
  Phone,
  ArrowLeft,
  Bot,
  CheckCircle2,
  ListChecks,
  User,
} from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "./components/ui/accordion";


export default function ChatBot() {
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [isFaqOpen, setIsFaqOpen] = useState(false);
  const [currentView, setCurrentView] = useState("main");
  const [language, setLanguage] = useState("en");
  const [messages, setMessages] = useState([]);
  const [userInput, setUserInput] = useState("");
  const [isTyping, setIsTyping] = useState(false);
  const chatEndRef = useRef(null);
  const inputRef = useRef(null);
  const scrollAreaRef = useRef(null);

  // Auto-scroll when messages or typing or view changes
  useEffect(() => {
    if (chatEndRef.current) {
      setTimeout(() => {
        chatEndRef.current.scrollIntoView({
          behavior: "smooth",
          block: "end",
        });
      }, 100);
    }
  }, [messages, isTyping, currentView]);

  // Focus input when chat opens
  useEffect(() => {
    if (isChatOpen && currentView === "chat") {
      setTimeout(() => {
        inputRef.current?.focus();
      }, 200);
    }
  }, [isChatOpen, currentView]);

  const toggleChat = () => {
    setIsChatOpen(!isChatOpen);
    if (!isChatOpen) {
      setIsFaqOpen(false);
      if (messages.length === 0) {
        setMessages([
          {
            id: Date.now(),
            type: "bot",
            content:
              language === "en"
                ? "ЁЯСЛ Hello! I'm DBT Buddy, your intelligent scholarship assistant. You can ask me anything about DBT, scholarships, or use the quick buttons below!"
                : "ЁЯСЛ рдирдорд╕реНрддреЗ! рдореИрдВ рдбреАрдмреАрдЯреА рдорд┐рддреНрд░ рд╣реВрдВ, рдЖрдкрдХрд╛ рдмреБрджреНрдзрд┐рдорд╛рди рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐ рд╕рд╣рд╛рдпрдХред рдЖрдк рдореБрдЭрд╕реЗ DBT, рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдХреБрдЫ рднреА рдкреВрдЫ рд╕рдХрддреЗ рд╣реИрдВ рдпрд╛ рдиреАрдЪреЗ рджрд┐рдП рдЧрдП рддреНрд╡рд░рд┐рдд рдмрдЯрди рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ!",
            timestamp: new Date(),
          },
        ]);
      }
    }
  };

  const toggleFaq = () => {
    setIsFaqOpen(!isFaqOpen);
    if (!isFaqOpen) setIsChatOpen(false);
  };

  const handleSendMessage = async () => {
    if (!userInput.trim()) return;

    const userMessage = {
      id: Date.now(),
      type: "user",
      content: userInput,
      timestamp: new Date(),
    };

    setMessages((prev) => [...prev, userMessage]);
    setUserInput("");
    setIsTyping(true);

    try {
      const context = `
You are DBT Buddy, an intelligent assistant for Direct Benefit Transfer (DBT) and scholarship related queries in India. You help students with:
1. DBT and scholarship information
2. Application processes
3. Document requirements
4. Banking and Aadhaar linking
5. Payment issues and delays
6. Portal navigation (NSP, MahaDBT)
7. Grievance procedures

Key Information:
- DBT requires Aadhaar-seeded bank accounts
- NSP (scholarships.gov.in) for central schemes
- MahaDBT for Maharashtra state schemes
- Common schemes: Post-Matric (SC/ST/OBC), Merit-cum-Means, etc.
- Income limits typically тВ╣2.5-8 lakh depending on scheme
- Documents needed: Aadhaar, Income cert, Caste cert, Bank passbook, etc.

Respond helpfully in ${
        language === "en" ? "English" : "Hindi"
      } and keep responses concise but informative.
`;

      const response = await InvokeLLM({
        prompt: `${context}\n\nUser Question: ${userInput}`,
        add_context_from_internet: false,
      });

      const botMessage = {
        id: Date.now() + 1,
        type: "bot",
        content: response,
        timestamp: new Date(),
      };

      setMessages((prev) => [...prev, botMessage]);
    } catch (error) {
      const errorMessage = {
        id: Date.now() + 1,
        type: "bot",
        content:
          language === "en"
            ? "Sorry, I'm having trouble connecting right now. Please try again or use the quick buttons below."
            : "рдХреНрд╖рдорд╛ рдХрд░реЗрдВ, рдореБрдЭреЗ рдЕрднреА рдХрдиреЗрдХреНрдЯ рдХрд░рдиреЗ рдореЗрдВ рд╕рдорд╕реНрдпрд╛ рд╣реЛ рд░рд╣реА рд╣реИред рдХреГрдкрдпрд╛ рдлрд┐рд░ рд╕реЗ рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВ рдпрд╛ рдиреАрдЪреЗ рджрд┐рдП рдЧрдП рддреНрд╡рд░рд┐рдд рдмрдЯрди рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред",
        timestamp: new Date(),
      };
      setMessages((prev) => [...prev, errorMessage]);
    } finally {
      setIsTyping(false);
    }
  };

  const handleQuickResponse = async (optionId) => {
    const quickMessage = {
      id: Date.now(),
      type: "user",
      content:
        mainOptions.find((opt) => opt.id === optionId)?.label[language] || optionId,
      timestamp: new Date(),
    };

    const botMessage = {
      id: Date.now() + 1,
      type: "bot",
      content: responses[language][optionId] || "Response not found.",
      timestamp: new Date(),
    };

    setCurrentView("chat");
    setMessages((prev) => [...prev, quickMessage, botMessage]);
  };

  const startNewChat = () => {
    setCurrentView("chat");
    setMessages([]);
  };

  const handleKeyPress = (e) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const mainOptions = [
    {
      id: "schemes",
      icon: Book,
      label: {
        en: "ЁЯУЪ Scholarship Schemes & Eligibility",
        hi: "ЁЯУЪ рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐ рдпреЛрдЬрдирд╛рдПрдВ рдФрд░ рдкрд╛рддреНрд░рддрд╛",
      },
    },
    {
      id: "documents",
      icon: FileText,
      label: {
        en: "ЁЯз╛ Document Requirements",
        hi: "ЁЯз╛ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛рдПрдВ",
      },
    },
    {
      id: "banking",
      icon: CreditCard,
      label: {
        en: "ЁЯПж Aadhaar Seeding & Bank Linking",
        hi: "ЁЯПж рдЖрдзрд╛рд░ рд╕реАрдбрд┐рдВрдЧ рдФрд░ рдмреИрдВрдХ рд▓рд┐рдВрдХрд┐рдВрдЧ",
      },
    },
    {
      id: "delays",
      icon: Clock,
      label: {
        en: "тП│ Payment Delays / Rejections",
        hi: "тП│ рднреБрдЧрддрд╛рди рд╡рд┐рд▓рдВрдм / рдЕрд╕реНрд╡реАрдХрд░рдг",
      },
    },
    {
      id: "portal",
      icon: Globe,
      label: {
        en: "ЁЯМР NSP / MahaDBT Portal Issues",
        hi: "ЁЯМР NSP / MahaDBT рдкреЛрд░реНрдЯрд▓ рд╕рдорд╕реНрдпрд╛рдПрдВ",
      },
    },
    {
      id: "grievance",
      icon: Phone,
      label: {
        en: "ЁЯУЮ Lodge a Grievance",
        hi: "ЁЯУЮ рд╢рд┐рдХрд╛рдпрдд рджрд░реНрдЬ рдХрд░реЗрдВ",
      },
    },
  ];

  const responses = {
    en: {
      welcome:
        "ЁЯСЛ Hello! I'm DBT Buddy, your intelligent scholarship assistant. You can ask me anything about DBT, scholarships, or use the quick options below!",
      schemes: `HereтАЩs an overview of popular DBT scholarships and their eligibility:

ЁЯОУ Central Schemes (via NSP):
- Post-Matric Scholarship for SC/ST/OBC Students
┬а ЁЯСЙ For students studying in Class 11 & above, parental income < тВ╣2.5 lakh.
- Merit-cum-Means Scholarship for Professional & Technical Courses
┬а ЁЯСЙ For students pursuing UG/PG technical courses, income < тВ╣2.5 lakh.
- National Fellowship & Scholarship for Higher Education of ST Students
┬а ЁЯСЙ For ST students pursuing MPhil/PhD, income < тВ╣6 lakh.

ЁЯПл State Schemes (via MahaDBT):
- Government of Maharashtra Post-Matric Scholarship (SC/OBC/SBC/VJNT)
┬а ЁЯСЙ Income limit: тВ╣2.5 тАУ тВ╣8 lakh depending on category.
- Eklavya Scholarship
┬а ЁЯСЙ For graduate students securing тЙе 60% marks, income < тВ╣75,000.
- Dr. Panjabrao Deshmukh Hostel Maintenance Allowance
┬а ЁЯСЙ For students in hostels, income < тВ╣8 lakh.

тД╣я╕П Tip: Always check your portal (NSP/MahaDBT) for updated scheme details.

Would you like me to share тЮбя╕П *Required Documents* for applying?`,
      documents: `ЁЯУС Common documents required for most DBT scholarships:

1. Aadhaar Card (linked with bank account)
2. Caste Certificate (SC/ST/OBC/VJNT/SBC тАУ as applicable)
3. Income Certificate (issued by competent authority, usually Tahsildar)
4. Domicile Certificate (for state schemes)
5. Marksheet of previous qualifying examination
6. Fee Receipt / Admission Proof (college/institute)
7. Bank Passbook (first page scan with IFSC & account number visible)
8. Bonafide Certificate from Institute
9. Disability Certificate (if applicable)

тЪая╕П Note: Documents must be clear scans, in PDF/JPEG format, under the size limits set by NSP/MahaDBT.

Do you want to know about тЮбя╕П *Aadhaar & Bank Linking* next?`,
      banking: `ЁЯПж To receive DBT benefits, your Aadhaar must be seeded with your bank account. HereтАЩs how:

тЬЕ Step 1: Visit your bank branch with Aadhaar & passbook.
тЬЕ Step 2: Fill Aadhaar seeding form & submit.
тЬЕ Step 3: You will get a confirmation SMS once linked.

ЁЯУМ Check Aadhaar-Bank linking status:
- Go to UIDAI website тЮбя╕П тАЬCheck Aadhaar-Bank MappingтАЭ
- Or dial *999*9# from your Aadhaar-linked mobile.

тЪая╕П Important: Only *one bank account* can be mapped for DBT at a time. If you change banks, update Aadhaar seeding immediately.

ЁЯСЙ Would you like me to explain тЮбя╕П *Why Payments Get Delayed or Rejected*?`,
      delays: `тЪая╕П Common reasons for DBT payment delays or rejections:

1. Aadhaar not linked with bank account.
2. Bank account inactive or closed.
3. Name mismatch between Aadhaar, bank account & application.
4. Incorrect IFSC or account number entered.
5. Documents not verified by institute or district officer.
6. Late submission of application.

ЁЯТб What to do:
- Verify Aadhaar-bank linking at UIDAI portal.
- Check тАЬApplication/Payment StatusтАЭ on NSP/MahaDBT portal.
- Contact your institute nodal officer for pending verification.
- If rejected by PFMS/bank, update details and re-submit.

ЁЯСЙ Would you like to know тЮбя╕П *Portal Login & Technical Issues*?`,
      portal: `ЁЯМР Facing portal issues? Here are common problems & fixes:

ЁЯФС Login Issues:
- Forgotten password тЮбя╕П use тАЬForgot PasswordтАЭ option with registered email/phone.
- Account locked тЮбя╕П wait 24 hrs, then reset.

ЁЯУд Application Not Submitting:
- Check internet speed & browser compatibility (use Chrome/Edge).
- Clear cache/cookies.
- Ensure documents are under size/format limits.

тП│ Application Under Verification for Long:
- Institute/district officer delays are common.
- Visit your instituteтАЩs scholarship cell to request faster approval.

ЁЯУЮ Technical Support:
- NSP Helpdesk: 0120-6619540, helpdesk@nsp.gov.in
- MahaDBT Helpdesk: 022-49150800, mahadbt.helpdesk@maharashtra.gov.in

ЁЯСЙ Still stuck? You can тЮбя╕П *Lodge a Grievance*.`,
      grievance: `ЁЯУв If your issue isnтАЩt resolved, you can raise a grievance:

ЁЯЦея╕П Online:
- NSP Grievance Portal: https://scholarships.gov.in
- MahaDBT Grievance Form: https://mahadbtmahait.gov.in

ЁЯУЮ Helplines:
- NSP: 0120-6619540
- MahaDBT: 022-49150800

ЁЯУз Email:
- NSP: helpdesk@nsp.gov.in
- MahaDBT: mahadbt.helpdesk@maharashtra.gov.in

ЁЯУМ Keep ready: Application ID, Aadhaar, bank details, and scheme name.

I hope this helps! Do you want to тЮбя╕П *Go Back to Main Menu*?`,
    },
    hi: {
      // Hindi translations truncated for brevity (use your full Hindi text here)
      welcome: "ЁЯСЛ рдирдорд╕реНрддреЗ! рдореИрдВ рдбреАрдмреАрдЯреА рдорд┐рддреНрд░ рд╣реВрдВ...",
      schemes: "...",
      documents: "...",
      banking: "...",
      delays: "...",
      portal: "...",
      grievance: "...",
    },
  };

  const faqs = {
    en: {
      "ЁЯУЭ Application Related": [
        {
          q: "When is the last date to apply for scholarships?",
          a: "тЖТ Dates vary every year; check NSP/MahaDBT portal notice section.",
        },
        // ... more FAQs
      ],
      // ... more categories
    },
    hi: {
      // Hindi FAQs here
    },
  };

  return (
    <>
      {/* Chat Button */}
      <motion.div
        whileHover={{ scale: 1.05 }}
        whileTap={{ scale: 0.95 }}
        className="fixed top-6 right-6 z-50"
      >
        <Button
          onClick={toggleChat}
          className="w-16 h-16 rounded-full bg-[var(--primary-orange)] hover:bg-orange-700 shadow-xl border-2 border-white transition-all duration-300"
        >
          <AnimatePresence mode="wait">
            {isChatOpen ? (
              <motion.div
                key="close"
                initial={{ rotate: -90, opacity: 0 }}
                animate={{ rotate: 0, opacity: 1 }}
                exit={{ rotate: 90, opacity: 0 }}
                transition={{ duration: 0.2 }}
              >
                <X className="w-6 h-6 text-white" />
              </motion.div>
            ) : (
              <motion.div
                key="open"
                initial={{ rotate: 90, opacity: 0 }}
                animate={{ rotate: 0, opacity: 1 }}
                exit={{ rotate: -90, opacity: 0 }}
                transition={{ duration: 0.2 }}
              >
                <MessageCircle className="w-6 h-6 text-white" />
              </motion.div>
            )}
          </AnimatePresence>
        </Button>
      </motion.div>

      {/* FAQ Button */}
      <motion.div
        whileHover={{ scale: 1.05 }}
        whileTap={{ scale: 0.95 }}
        className="fixed top-6 right-20 z-50"
      >
        <Button
          onClick={toggleFaq}
          className="w-14 h-14 rounded-full bg-[var(--primary-orange)] hover:bg-orange-700 shadow-xl border-2 border-white transition-all duration-300"
        >
          <ListChecks className="w-6 h-6 text-white" />
        </Button>
      </motion.div>

      {/* Chat Interface */}
      <AnimatePresence>
        {isChatOpen && (
          <motion.div
            initial={{ opacity: 0, y: -20, scale: 0.95 }}
            animate={{ opacity: 1, y: 0, scale: 1 }}
            exit={{ opacity: 0, y: -20, scale: 0.95 }}
            transition={{ type: "spring", damping: 20, stiffness: 300 }}
            className="fixed top-24 right-6 w-96 h-[600px] z-40 shadow-2xl"
          >
            {/* ...Chat UI as per your code */}
            {/* See your detailed chat UI JSX here */}
          </motion.div>
        )}
      </AnimatePresence>

      {/* FAQ Interface */}
      <AnimatePresence>
        {isFaqOpen && (
          <motion.div
            initial={{ opacity: 0, y: -20, scale: 0.95 }}
            animate={{ opacity: 1, y: 0, scale: 1 }}
            exit={{ opacity: 0, y: -20, scale: 0.95 }}
            transition={{ type: "spring", damping: 20, stiffness: 300 }}
            className="fixed top-24 right-6 w-96 h-[600px] z-40 shadow-2xl"
          >
            {/* ...FAQ UI as per your code */}
            {/* See your detailed FAQ UI JSX here */}
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}
